name: Python-based model lint and test

on:
  workflow_call:
    inputs:
      python_version:
        description: "Python version to use. If not provided, will be extracted from pyproject.toml"
        type: string
        required: false
        default: ""
      service_account_json:
        description: |
          Google service account JSON to use while testing. By default, fake credentials will be used.
          Only provide it, if your tests are to be run against a real bucket.
        type: string
        required: false
        default: ""

jobs:
  python-model-lint-and-test:
    runs-on: ubuntu-latest
    name: Python Model Lint & Test
    env:
      GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ inputs.service_account_json || secrets.FAKE_GOOGLE_SERVICE_ACCOUNT_JSON }}
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Extract Python version from pyproject.toml
        run: echo "PYTHON_VERSION=$(grep -E "^python\s?=" < pyproject.toml | awk '{print $3}' | sed -r 's/^"\^?|"$//g')" >> "$GITHUB_ENV"
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ inputs.python_version || env.PYTHON_VERSION }}
          cache: 'poetry'
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: |
            ${{ secrets.DEPLOY_USER_SSH_KEY }}
      - name: Configure pip to access our private PyPi repo
        run: |
          sudo /bin/bash -c "echo $'[global]\n\
          trusted-host = pypi.remerge.io\n\
                         pypi.org\n\
          \n\
          index-url = https://pypi.org/simple\n\
          extra-index-url = https://${{ secrets.PYPI_USERNAME }}:${{ secrets.PYPI_PASSWORD }}@pypi.remerge.io/simple'\
          > /etc/pip.conf"
      - name: Configure Poetry to access our private PyPi repo
        run: |
          poetry config repositories.remerge https://pypi.remerge.io
          poetry config http-basic.remerge '${{ secrets.PYPI_USERNAME }}' '${{ secrets.PYPI_PASSWORD }}'
      - run: poetry install

      - name: Lint
        run: make lint
      - name: Test
        run: |
          make test
