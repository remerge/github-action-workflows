name: Deploy to Nomad Cluster
on:
  workflow_call:
    inputs:
      cluster_details:
        required: true
        type: string
      image_name:
        required: true
        type: string
    secrets:
      secrets_data:
        required: true
jobs:
  setup:
    runs-on: ubuntu-latest
    env:
      CLUSTER_DETAILS: ${{ inputs.cluster_details }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: echo "::set-output name=matrix::{\"include\":[ $CLUSTER_DETAILS ]}"
  nomad:
    needs: setup
    runs-on: [self-hosted, linux]
    strategy:
      matrix:  ${{fromJSON(needs.setup.outputs.matrix)}}
          
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Extract metadata (tags, labels) for Docker
      # if: ${{ github.event_name != 'pull_request' }}
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ inputs.registry }}/${{ inputs.image_name }}
        tags: |
          type=sha
    - name: Install Nomad
      # if: ${{ github.event_name != 'pull_request' }}
      run: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
        sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
        sudo apt-get update && sudo apt-get install nomad

    - name: Run Nomad Plan
      id: nomad_plan
      env:
        NOMAD_TOKEN: ${{ secrets.secrets_data[matrix.api_key_name] }}
        NOMAD_API: ${{ matrix.api_url }}
        NOMAD_VAR_task_image: ${{ steps.meta.outputs.tags }}
        NOMAD_VAR_cluster: ${{ matrix.cluster }}
        NOMAD_VAR_environment: ${{ matrix.environment }}
      run: |
        res=$(nomad plan -token="$NOMAD_TOKEN" -address="$NOMAD_API" nomad.hcl) || ( [ $? -eq 1 ] && true)

        echo $res
        res="${res//'%'/'%25'}"
        res="${res//$'\n'/'%0A'}"
        res="${res//$'\r'/'%0D'}"

        echo "::set-output name=stdout::$res"

    - name: PR Comment
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/github-script@v2
      with:
        github-token: ${{secrets.github_token}}
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Nomad Plan \n ${{ steps.nomad_plan.outputs.stdout }}`
          })

    - name: Deploy to Nomad
      # if: ${{ github.event_name != 'pull_request' }}
      env:
        NOMAD_TOKEN: ${{ secrets.secrets_data[matrix.api_key_name] }}
        NOMAD_API: ${{ matrix.api_url }}
        NOMAD_VAR_task_image: ${{ steps.meta.outputs.tags }}
        NOMAD_VAR_cluster: ${{ matrix.cluster }}
        NOMAD_VAR_environment: ${{ matrix.environment }}
      run: |
        nomad run -token="$NOMAD_TOKEN" -address="$NOMAD_API" -detach nomad.hcl
