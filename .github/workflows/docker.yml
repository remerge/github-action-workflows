name: Docker build and push to GAR

on:
  workflow_call:
    inputs:
      registry:
        type: string
        required: false
        default: "europe-west4-docker.pkg.dev"
        description: "Google Artifact registry"

      project:
        type: string
        required: false
        default: "artifact-registry-ff9b"
        description: "GCP project"
      
      repo:
        type: string
        required: false
        default: "sample"
        description: "GCP project repository"
      
      image:
        type: string
        required: true
        description: "Image name"

      context:
        type: string
        required: false
        description: "Docker build context"
        default: .

    secrets:
      DEPLOY_USER_SSH_KEY:
        required: true
        description: "Private key for deploy user to access private repos"
      ARTIFACT_REGISTRY_GOOGLE_SERVICE_ACCOUNT_JSON:
        required: true
        description: ""


jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.0
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        with:
          ssh-private-key: ${{ secrets.DEPLOY_USER_SSH_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.ARTIFACT_REGISTRY_GOOGLE_SERVICE_ACCOUNT_JSON }}

      - name: Login to GAR
        run: |
          cat ${{ steps.auth.outputs.credentials_file_path }} | docker login -u _json_key \
          --password-stdin ${{ inputs.registry }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.image }}
          tags: |
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          ssh: default
