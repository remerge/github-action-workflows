name: Plan a deployment to Nomad Cluster
on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
        description: The unique identifier of this deployed instance of the pack
      cluster:
        required: true
        type: string
        description: Nomad Cluster/Datacenter Name
      environment:
        required: true
        type: string
        description: Application environment to deploy
      api_url:
        required: true
        type: string
        description: Nomad cluster API address
      image_name:
        required: true
        type: string
        description: Docker image to deploy to cluster
      run_plan:
        type: boolean
        description: Specify whether to plan nomad pack to cluster
        default: true
      run_deploy:
        type: boolean
        description: Specify whether to deploy nomad pack to cluster
        default: false
      variables_file_name:
        required: true
        type: string
        description: Relative path to nomad_pack variable.
      config_file_name:
        required: true
        type: string
        description: Relative path to nomad_pack variable.
    secrets:
      nomad_token:
        required: false
        description: "Nomad token for accessing Nomad cluster"

jobs:
  nomad:
    runs-on: [self-hosted, generic, nomad]
    steps:
    - name: Run Nomad Plan
      id: nomad_plan
      if: ${{ inputs.run_plan }}
      env:
        NOMAD_TOKEN: ${{ secrets[matrix.cluster_detail.api_key_name] }}
        NOMAD_ADDR: ${{ matrix.cluster_detail.api_url }}
        NOMAD_VAR_task_image: ${{ steps.meta.outputs.tags }}
        NOMAD_VAR_cluster: ${{ matrix.cluster_detail.cluster }}
        NOMAD_VAR_environment: ${{ matrix.cluster_detail.environment }}
      run: |
        res=$(nomad plan ${{ inputs.config_file_name }} \
        -var-file=${{ inputs.variables_file_name }}) || ( [ $? -eq 1 ] && true)

        echo "${res}"
        res="${res//'%'/'%25'}"
        res="${res//$'\n'/'%0A'}"
        res="${res//$'\r'/'%0D'}"

        echo "stdout=$res" >> "$GITHUB_OUTPUT"

    - name: PR Comment
      if: ${{ github.event_name == 'pull_request' && inputs.run_deploy }}
      uses: actions/github-script@v2
      with:
        github-token: ${{secrets.github_token}}
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Nomad Plan for ${{ inputs.cluster }} \n ${{ steps.nomad_plan.outputs.stdout }}`
          })
