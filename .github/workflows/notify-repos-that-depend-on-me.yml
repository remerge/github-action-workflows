name: Notify repos that depend on me

on:
  workflow_call:
    inputs:
      assign_to:
        type: string
        required: true
        description: "Github username we should assign the PRs to"
      os:
        description: "OS version to run the workflow on. If not provided, defaults to 'ubuntu-latest'"
        type: string
        default: ubuntu-latest
        required: false
      golang_version:
        description: "Override Go version in go.mod"
        type: string
        required: false
        default: ""
    secrets:
      app_id:
        required: true
        description: "App id that we exchange for a token."
      app_key:
        description: "Private app key that we can exchange for a token."
        required: true

jobs:
  prepare-dependants:
    runs-on: ${{ inputs.os }}
    outputs:
      dependants: ${{ steps.prepare.outputs.dependants }}
    steps:
      - name: Use our App Key and App ID to get an App Token
        id: generate_app_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.app_id }}
          private_key: ${{ secrets.app_key }}

      - name: Check out code
        uses: actions/checkout@v3

      - name: Check out scripts
        uses: actions/checkout@v3
        with:
          repository: remerge/workflows
          path: workflow-scripts

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ inputs.golang_version || env.GO_VERSION }}
  
      - name: Prepare dependants
        id: prepare
        run: |
          DELIMITER=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          cd workflow-scripts
          go mod download
          DEPENDANTS=$(go run scripts/get_dependants.go)
          {
            echo "dependants<<$DELIMITER"
            echo "$DEPENDANTS"
            echo "$DELIMITER"
          } >> "$GITHUB_OUTPUT"
        env:
          REPONAME: ${{ github.repository }}
          APP_TOKEN: ${{ steps.generate_app_token.outputs.token }}

  notify-all-dependants:
    needs: prepare-dependants
    strategy:
      matrix:
        dependant: ${{ fromJSON(needs.prepare-dependants.outputs.dependants) }}
    runs-on: ${{ inputs.os }}
    steps:
    - run: echo ${{ matrix.dependant }}
      shell: bash

    - name: Use our App Key and App ID to get an App Token
      id: generate_app_token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.app_id }}
        private_key: ${{ secrets.app_key }}

    - name: Dispatch Event
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ steps.generate_app_token.outputs.token }}
        repository: remerge/${{ matrix.dependant }}
        event-type: possible-dependency-update
        client-payload: |
          {
            "repo_path": "github.com/${{ github.repository }}",
            "repo_name": "${{ github.repository }}",
            "assign_to": "${{ inputs.assign_to }}"
          }
